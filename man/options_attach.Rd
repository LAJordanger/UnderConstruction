% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/options_attach.R
\name{options_attach}
\alias{options_attach}
\title{Attachment with update of options}
\usage{
options_attach(what, pos = 2L, name = deparse(substitute(what)),
  warn.conflicts = TRUE, options_name, options_front = TRUE,
  replace = TRUE)
}
\arguments{
\item{what}{The object to attach.  Note: This argument will be sent
to the \code{what}-argument of \code{attach}.}

\item{pos}{The position in \code{search()} at which the object will
be attached.  Note: This argument will be sent to the
\code{pos}-argument of \code{attach}.}

\item{name}{The name to use for the attached object.  Names
starting with \code{package:} are reserved for \code{library}.
If the search path already has an object named \code{name},
then a minor adjustment will be made to ensure that the
cleaning done by \code{options_detach} doesn't remove the wrong
alternative.  Note: This argument will be sent to the
\code{name}-argument of \code{attach}.}

\item{warn.conflicts}{Logical argument.  When this is \code{TRUE},
warnings will be printed about conflicts from attaching
\code{what}.  A conflict is a function masking a function, or a
non-function masking a non-function.  Note: This argument will
be sent to the \code{warn.conflicts}-argument of \code{attach}.}

\item{options_name}{A character string that specifies the name of
the option to be used when storing the names of the attached
environments.  Note that \code{options_name} will be tested
against options added by other packages, and that an error will
be called if there's an overlap - in particular, this function
will not mess up any options set by other packages.  A
"stacking" procedure will be used if \code{options_name}
already has been created before (by this function), and the way
the stacking is done is governed by the
\code{options_front}-argument.}

\item{options_front}{A logical value, default \code{FALSE}, that
decides how a new \code{name} should be added to
\code{options_name} (when an earlier use of
\code{options_attach} already created an occurrence of
\code{options_name}).}

\item{replace}{A logical value, default \code{TRUE}. This can be
used to check that earlier versions of the attached environment
(with the same combination of \code{name} and
\code{options_name}) will be detached before the new
environment specified by \code{what} is added.}
}
\value{
When successful, the function will attach the object
    specified in \code{what} and add its \code{name} to the option
    \code{options_name} as specified by \code{options_front}.
    Depending on the value of \code{replace}, any old attached
    environment with the same name as the present one will be
    replaced.  Note: No replacement will be done if the new and the
    old environment contains the same content.  If the positional
    order on the search-path is important, that might require that
    the existing environment has to be detached first.
}
\description{
This function is a wrapper around \code{attach}, that in addition
performs an update of the options.  The idea is that an option can
store the names of several attached objects, and latter on when
it's time to clean up it should be sufficient to specify the
relevant option in order to \code{detach}.  Note that the function
performs a sanity-check to ensure that no options set by other
packages should be affected.  The defaults for those arguments that
are to be sent to \code{attach}, are inherited from that function.
}

